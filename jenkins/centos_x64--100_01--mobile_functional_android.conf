#!/bin/bash
#PLATFORM=CentOS_release_5.8
#export PATH=/usr/local/bin:$PATH
export ANDROID_HOME=/home/jenkins/android-studio/sdk
export GOROOT=$HOME/go
export PATH=$PATH:$GOROOT/bin
export PATH=$PATH:$ANDROID_HOME/tools:$ANDROID_HOME/platform-tools
#gradle -v

export SLEEP_AFTER_LAUNCH=15000
export DISPLAY=:1

export
/sbin/ifconfig


killall emulator64-arm
sleep 3
emulator64-arm -avd test -netspeed full -netdelay none -noaudio -no-boot-anim &

sleep 10


AUT_DIR=${WORKSPACE}/app-under-test
#if [[ -e ${AUT_DIR} ]] ; then rm -rf ${AUT_DIR} ; fi
rm -rf ${WORKSPACE}/*
mkdir -p ${AUT_DIR}



echo "#--------------------------------------------  build sync_gateway"
cd ${AUT_DIR}
git clone https://github.com/couchbase/sync_gateway.git
cd ${AUT_DIR}/sync_gateway
git checkout ${sync_gateway_branch}

git status
git log -3

git submodule init & git submodule update
sleep 10
git submodule init & git submodule update
echo "./build.sh"
./build.sh

echo "#--------------------------------------------  build couchbase-lite-android-liteserv"
cd ${AUT_DIR}
git clone https://github.com/couchbaselabs/couchbase-lite-android-liteserv.git
cd ${AUT_DIR}/couchbase-lite-android-liteserv
git checkout ${couchbase-lite-android-liteserv_branch}
echo "sdk.dir=/home/jenkins/android-studio/sdk/" > local.properties
git submodule init && git submodule update

git status
git log -3
./gradlew clean && ./gradlew build

cp extra/jenkins_build/run_android_liteserv.sh .
#replace only the first occurrence in a file "$*" -> $* --es username "" --es password ""
sed -i '0,/$\*/{s/$\*/$\* --es username "" --es password ""/}' run_android_liteserv.sh
chmod 777 -R run_android_liteserv.sh


adb shell "rm -rf /data/data/com.couchbase*"

echo "./run_android_liteserv.sh 8081"
./run_android_liteserv.sh 8081

env | sort



echo "#--------------------------------------------  build cblite-tests"

export SYNCGATE_PATH=${AUT_DIR}/sync_gateway/bin/sync_gateway
export LITESERV_PATH=${AUT_DIR}/couchbase-lite-android-liteserv
cd ${WORKSPACE}
if [[ ! -d cblite-tests ]] ; then git clone https://github.com/couchbaselabs/cblite-tests.git ; fi
cd cblite-tests
git pull
git show --stat

mkdir -p tmp/single
export CC="gcc44"
export CXX="g++44"
npm install  2>&1  >    ${WORKSPACE}/npm_install.log


#echo "===================================================================================== killing any hanging com.couchbase.liteservandroid apps"
#adb shell am force-stop com.couchbase.liteservandroid
# echo ===================================================================================== starting ${LITESERV_PATH}
# ${LITESERV_PATH}  | tee ${WORKSPACE}/liteserv.log & 
#
# echo ===================================================================================== starting ./node_modules/.bin/tap
#CONF_FILE=local_android npm test 
# ./node_modules/.bin/tap ./tests       1> ${WORKSPACE}/npm_test_results.log  2> ${WORKSPACE}/gateway.log

echo "logcat > ../logcat.log"
adb logcat > ../logcat.log &




echo ===================================================================================== starting npm

export TAP_TIMEOUT=${TAP_TIMEOUT}
export CONF_FILE=local_android
export NUM_DOCS=${NUM_DOCS}
export
pwd

echo "test running..."
npm test  > ${WORKSPACE}/npm_test_results.log

cat ${WORKSPACE}/npm_test_results.log

FAILS=`cat ${WORKSPACE}/npm_test_results.log | grep 'npm ERR!' | wc -l`
if [[ $((FAILS)) > 0 ]] 
  then
    echo ============================================ exit: ${FAILS}
    exit ${FAILS}
  else
    echo ============================================ DONE
    exit ${FAILS}
fi


echo ===================================================================================== killing any hanging com.couchbase.liteservandroid apps
adb shell am force-stop com.couchbase.liteservandroid || true


echo ===================================================================================== DONE
